(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"body {\n    font-family: sans-serif;\n}\n\nh1 {\n    font-size: 4rem;\n    margin-left: 25px;\n}\n\nh3 {\n    margin: 20px 0 20px 0;\n    font-size: 3rem;\n    padding: 0;\n}\n\nh4 {\n    font-size: 2rem;\n    padding: 0;\n    margin: 0;\n}\n\np {\n    font-size: 1.3rem;\n    padding: 0;\n    margin: 0;\n}\n\n#navBar {\n    background-color: lightgray;\n    color: white;\n    padding: 5px;\n}\n\n#container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    height: 800px;\n}\n\n#sideContainer {\n    width: 15%;\n    height: 800px;\n    background-color: darkgrey;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 2rem;\n    gap: 10px;\n}\n\n#mainContainer {\n    width:85%;\n    height: 800px;\n    background-color: lightgrey;\n}\n\n.projectContent {\n    display: none;\n    width: 80%;\n    margin: 0 auto 0 auto;\n}\n\n.projectContent.active {\n    display: block;\n}\n\n.projectInfo {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin: 20px auto 20px auto;\n    padding-bottom: 20px;\n    border-bottom: 1px solid black;\n}\n\n.projectTab {\n    padding: 10px;\n    width: 80%;\n}\n\n.projectTab.active{\n    background-color: blue;\n}\n\n.toDo {\n    display: flex;\n    justify-content: space-between;\n    border: solid 1px black;\n    margin: 15px 0 15px 0;\n    gap: 10px;\n    padding: 10px;\n}\n\n.toDoLeft {\n    display: flex;\n    gap: 10px;\n    margin: 0 0 0 5px;\n    padding: 0;\n}\n\n.toDoRight {\n    display: flex;\n    margin: 0 5px 0 0;\n    padding: 0;\n}\n\n.toDoTitle {\n    justify-self: flex-start;\n}\n\n.toDoDate {\n    justify-self: flex-end;\n    align-self: flex-end;\n}\n\n\n.addFormToDo {\n    padding: 5px;\n    background-color: none;\n    font-size: 1.3rem;\n    border: solid 1px black;\n}\n\n.addFormToDo:hover {\n    cursor: pointer;\n    background-color: red;\n}\n\nform {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n}\n\n.addFormProject {\n    padding: 10px;\n    border: solid 1px black;\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    width: 70%;\n}\n\ninput, button {\n    border: none;\n    border-radius: 0;\n    padding: 10px;\n    font-size: 1rem;\n}\n\n.checkBox {\n    height: 20px;\n    width: 20px;\n    border-radius: 20px;\n    background-color: none;\n    border: solid 1px black;\n    justify-self: flex-start;\n    align-self: center;\n}\n\n.checkBox.active {\n    background-color: green;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n    border: solid 3px black;\n}\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,qBAAqB;IACrB,eAAe;IACf,UAAU;AACd;;AAEA;IACI,eAAe;IACf,UAAU;IACV,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,2BAA2B;IAC3B,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,0BAA0B;IAC1B,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,eAAe;IACf,SAAS;AACb;;AAEA;IACI,SAAS;IACT,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,UAAU;IACV,qBAAqB;AACzB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,2BAA2B;IAC3B,oBAAoB;IACpB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,UAAU;AACd;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,uBAAuB;IACvB,qBAAqB;IACrB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,sBAAsB;IACtB,oBAAoB;AACxB;;;AAGA;IACI,YAAY;IACZ,sBAAsB;IACtB,iBAAiB;IACjB,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,sBAAsB;IACtB,uBAAuB;IACvB,wBAAwB;IACxB,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,uBAAuB;AAC3B",sourcesContent:["body {\n    font-family: sans-serif;\n}\n\nh1 {\n    font-size: 4rem;\n    margin-left: 25px;\n}\n\nh3 {\n    margin: 20px 0 20px 0;\n    font-size: 3rem;\n    padding: 0;\n}\n\nh4 {\n    font-size: 2rem;\n    padding: 0;\n    margin: 0;\n}\n\np {\n    font-size: 1.3rem;\n    padding: 0;\n    margin: 0;\n}\n\n#navBar {\n    background-color: lightgray;\n    color: white;\n    padding: 5px;\n}\n\n#container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    height: 800px;\n}\n\n#sideContainer {\n    width: 15%;\n    height: 800px;\n    background-color: darkgrey;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 2rem;\n    gap: 10px;\n}\n\n#mainContainer {\n    width:85%;\n    height: 800px;\n    background-color: lightgrey;\n}\n\n.projectContent {\n    display: none;\n    width: 80%;\n    margin: 0 auto 0 auto;\n}\n\n.projectContent.active {\n    display: block;\n}\n\n.projectInfo {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin: 20px auto 20px auto;\n    padding-bottom: 20px;\n    border-bottom: 1px solid black;\n}\n\n.projectTab {\n    padding: 10px;\n    width: 80%;\n}\n\n.projectTab.active{\n    background-color: blue;\n}\n\n.toDo {\n    display: flex;\n    justify-content: space-between;\n    border: solid 1px black;\n    margin: 15px 0 15px 0;\n    gap: 10px;\n    padding: 10px;\n}\n\n.toDoLeft {\n    display: flex;\n    gap: 10px;\n    margin: 0 0 0 5px;\n    padding: 0;\n}\n\n.toDoRight {\n    display: flex;\n    margin: 0 5px 0 0;\n    padding: 0;\n}\n\n.toDoTitle {\n    justify-self: flex-start;\n}\n\n.toDoDate {\n    justify-self: flex-end;\n    align-self: flex-end;\n}\n\n\n.addFormToDo {\n    padding: 5px;\n    background-color: none;\n    font-size: 1.3rem;\n    border: solid 1px black;\n}\n\n.addFormToDo:hover {\n    cursor: pointer;\n    background-color: red;\n}\n\nform {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n}\n\n.addFormProject {\n    padding: 10px;\n    border: solid 1px black;\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    width: 70%;\n}\n\ninput, button {\n    border: none;\n    border-radius: 0;\n    padding: 10px;\n    font-size: 1rem;\n}\n\n.checkBox {\n    height: 20px;\n    width: 20px;\n    border-radius: 20px;\n    background-color: none;\n    border: solid 1px black;\n    justify-self: flex-start;\n    align-self: center;\n}\n\n.checkBox.active {\n    background-color: green;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n    border: solid 3px black;\n}\n\n\n\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],d=o.base?A[0]+o.base:A[0],s=a[d]||0,l="".concat(d," ").concat(s);a[d]=s+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=o(n,r),d=0;d<a.length;d++){var s=t(a[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e);var o={};(()=>{t.d(o,{Z:()=>y});var n=t(379),e=t.n(n),r=t(795),a=t.n(r),i=t(569),c=t.n(i),A=t(565),d=t.n(A),s=t(216),l=t.n(s),p=t(589),u=t.n(p),f=t(426),m={};function C(n,e){return{title:n,dueDate:e}}function B(n,e){const t=[];return{title:n,description:e,toDoList:t,addToDo:function(n){t.push(n)},findToDo:function(n){return t.find((e=>e.title==n))}}}m.styleTagTransform=u(),m.setAttributes=d(),m.insert=c().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const g=function(n){const e=document.createElement("div");e.classList.add("toDo");const t=document.createElement("div");t.classList.add("toDoLeft");const o=document.createElement("div");o.classList.add("toDoRight");const r=document.createElement("div");r.classList.add("checkBox"),r.addEventListener("click",(function(n){n.target.classList.toggle("active")})),t.appendChild(r);const a=document.createElement("p");a.textContent=n.title,t.appendChild(a);const i=document.createElement("p");return i.textContent=n.dueDate,o.appendChild(i),e.appendChild(t),e.appendChild(o),e};function x(){const n=document.createElement("div");return n.classList.add("addFormToDo"),n.textContent="Add toDo",n.addEventListener("click",(function(){const e=function(){const n=document.createElement("form");n.addEventListener("submit",(function(e){e.preventDefault();const t=C(document.querySelector("#formTitle").value,document.querySelector("#formDate").value),o=n.parentNode;y.findProject(o.id).addToDo(t),console.log(y);const r=g(t);n.parentNode.appendChild(r),n.parentNode.removeChild(n);const a=x();r.parentNode.appendChild(a)}));const e=document.createElement("input");e.type="text",e.value="What is your task?",e.id="formTitle",n.appendChild(e);const t=document.createElement("input");t.type="date",t.id="formDate",n.appendChild(t);const o=document.createElement("button");return o.textContent="Submit",n.appendChild(o),n}();n.parentNode.appendChild(e),n.parentNode.removeChild(n)})),n}const I=function(n){const e=function(n,e){const t=document.createElement("div");t.classList.add("projectContent"),t.id=n;const o=document.createElement("div");o.classList.add("projectInfo");const r=document.createElement("h4");r.textContent=n,o.appendChild(r);const a=document.createElement("p");return a.textContent=e,o.appendChild(a),t.appendChild(o),t}(n.title,n.description);document.querySelector("#mainContainer").appendChild(e),n.toDoList.length&&(console.log(n.toDoList),n.toDoList.forEach((e=>{let t=g(e);document.getElementById(n.title).appendChild(t)})));const t=x();e.appendChild(t);const o=function(n){const e=document.createElement("div");return e.classList.add("projectTab"),e.textContent=n,e}(n.title);document.querySelector("#sideContainer").appendChild(o),o.addEventListener("click",(function(e){!function(n,e){const t=document.querySelectorAll(".projectTab"),o=document.querySelectorAll(".projectContent");t.forEach((n=>n.classList.remove("active"))),o.forEach((n=>n.classList.remove("active"))),n.target.classList.toggle("active"),document.getElementById(e).classList.toggle("active")}(e,n.title)}))},h=function(){const n=[];return{projectList:n,addProject:function(e){n.push(e)},findProject:function(e){return n.find((n=>n.title==e))}}}(),b=B("project1","test project 1, this is the description area");b.addToDo(C("Be born","07/12/1997")),b.addToDo(C("Graduate","06/06/2016")),I(b);const v=function n(){const e=document.createElement("div");return e.classList.add("addFormProject"),e.textContent="Add Project",e.addEventListener("click",(function(){const t=function(){const e=document.createElement("form");e.classList.add("projectForm"),e.addEventListener("submit",(function(t){t.preventDefault();const o=B(document.querySelector("#projectFormTitle").value,document.querySelector("#projectFormDescription").value);y.addProject(o),console.log(y),I(o),e.parentNode.removeChild(e);const r=n();document.querySelector("#sideContainer").appendChild(r)}));const t=document.createElement("input");t.type="text",t.placeholder="What is your task?",t.id="projectFormTitle",t.required=!0,e.appendChild(t);const o=document.createElement("input");o.type="text",o.placeholder="Description",o.id="projectFormDescription",o.required=!0,e.appendChild(o);const r=document.createElement("button");return r.textContent="Submit",e.appendChild(r),e}();console.log(e.parentNode),e.parentNode.appendChild(t),e.parentNode.removeChild(e)})),e}();document.querySelector("#sideContainer").appendChild(v);const y=h})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,